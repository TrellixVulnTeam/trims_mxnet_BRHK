// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: upr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "upr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace upr {
class ShapeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Shape>
     _instance;
} _Shape_default_instance_;
class LayerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Layer>
     _instance;
} _Layer_default_instance_;
class ModelHandleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModelHandle>
     _instance;
} _ModelHandle_default_instance_;
class ModelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Model>
     _instance;
} _Model_default_instance_;
class ModelRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModelRequest>
     _instance;
} _ModelRequest_default_instance_;
class VoidDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Void>
     _instance;
} _Void_default_instance_;

namespace protobuf_upr_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, dim_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, byte_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, ipc_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, device_raw_ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Layer, ref_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelHandle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelHandle, model_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelHandle, byte_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelHandle, layer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, ref_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, owned_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, shared_model_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelRequest, directory_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelRequest, no_cache_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Void, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Shape)},
  { 7, -1, sizeof(Layer)},
  { 19, -1, sizeof(ModelHandle)},
  { 28, -1, sizeof(Model)},
  { 39, -1, sizeof(ModelRequest)},
  { 47, -1, sizeof(Void)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Shape_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Layer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModelHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Model_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Void_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "upr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Shape_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Shape_default_instance_);_Layer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Layer_default_instance_);_ModelHandle_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModelHandle_default_instance_);_Model_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Model_default_instance_);_ModelRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModelRequest_default_instance_);_Void_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Void_default_instance_);_Layer_default_instance_._instance.get_mutable()->shape_ = const_cast< ::upr::Shape*>(
      ::upr::Shape::internal_default_instance());
  _Model_default_instance_._instance.get_mutable()->owned_model_ = const_cast< ::upr::ModelHandle*>(
      ::upr::ModelHandle::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tupr.proto\022\003upr\"\"\n\005Shape\022\014\n\004rank\030\001 \001(\005\022"
      "\013\n\003dim\030\002 \003(\005\"\217\001\n\005Layer\022\n\n\002id\030\001 \001(\t\022\014\n\004na"
      "me\030\002 \001(\t\022\031\n\005shape\030\003 \001(\0132\n.upr.Shape\022\022\n\nb"
      "yte_count\030\004 \001(\003\022\022\n\nipc_handle\030\005 \001(\t\022\026\n\016d"
      "evice_raw_ptr\030\006 \001(\003\022\021\n\tref_count\030\007 \001(\003\"Z"
      "\n\013ModelHandle\022\n\n\002id\030\001 \001(\t\022\020\n\010model_id\030\002 "
      "\001(\t\022\022\n\nbyte_count\030\003 \001(\003\022\031\n\005layer\030\004 \003(\0132\n"
      ".upr.Layer\"\226\001\n\005Model\022\n\n\002id\030\001 \001(\t\022\014\n\004name"
      "\030\002 \001(\t\022\021\n\tfile_path\030\003 \001(\t\022\021\n\tref_count\030\004"
      " \001(\003\022%\n\013owned_model\030\005 \001(\0132\020.upr.ModelHan"
      "dle\022&\n\014shared_model\030\006 \003(\0132\020.upr.ModelHan"
      "dle\"F\n\014ModelRequest\022\014\n\004name\030\001 \001(\t\022\026\n\016dir"
      "ectory_path\030\002 \001(\t\022\020\n\010no_cache\030\003 \001(\010\"\006\n\004V"
      "oid2\212\001\n\010Registry\022-\n\004Open\022\021.upr.ModelRequ"
      "est\032\020.upr.ModelHandle\"\000\022&\n\005Close\022\020.upr.M"
      "odelHandle\032\t.upr.Void\"\000\022\'\n\004Info\022\021.upr.Mo"
      "delRequest\032\n.upr.Model\"\000B\010Z\003upr\370\001\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 682);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "upr.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_upr_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shape::kRankFieldNumber;
const int Shape::kDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shape::Shape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_upr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:upr.Shape)
}
Shape::Shape(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  dim_(arena) {
  protobuf_upr_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:upr.Shape)
}
Shape::Shape(const Shape& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dim_(from.dim_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:upr.Shape)
}

void Shape::SharedCtor() {
  rank_ = 0;
  _cached_size_ = 0;
}

Shape::~Shape() {
  // @@protoc_insertion_point(destructor:upr.Shape)
  SharedDtor();
}

void Shape::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void Shape::ArenaDtor(void* object) {
  Shape* _this = reinterpret_cast< Shape* >(object);
  (void)_this;
}
void Shape::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Shape::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shape::descriptor() {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Shape& Shape::default_instance() {
  protobuf_upr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Shape* Shape::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Shape>(arena);
}

void Shape::Clear() {
// @@protoc_insertion_point(message_clear_start:upr.Shape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dim_.Clear();
  rank_ = 0;
  _internal_metadata_.Clear();
}

bool Shape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upr.Shape)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dim = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dim())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_dim())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:upr.Shape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upr.Shape)
  return false;
#undef DO_
}

void Shape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upr.Shape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // repeated int32 dim = 2;
  if (this->dim_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dim_cached_byte_size_));
  }
  for (int i = 0, n = this->dim_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dim(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:upr.Shape)
}

::google::protobuf::uint8* Shape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:upr.Shape)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // repeated int32 dim = 2;
  if (this->dim_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _dim_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dim_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upr.Shape)
  return target;
}

size_t Shape::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:upr.Shape)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 dim = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dim_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dim_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:upr.Shape)
  GOOGLE_DCHECK_NE(&from, this);
  const Shape* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:upr.Shape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:upr.Shape)
    MergeFrom(*source);
  }
}

void Shape::MergeFrom(const Shape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:upr.Shape)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dim_.MergeFrom(from.dim_);
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void Shape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:upr.Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shape::CopyFrom(const Shape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upr.Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shape::IsInitialized() const {
  return true;
}

void Shape::Swap(Shape* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Shape* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Shape::UnsafeArenaSwap(Shape* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Shape::InternalSwap(Shape* other) {
  using std::swap;
  dim_.InternalSwap(&other->dim_);
  swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shape::GetMetadata() const {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shape

// int32 rank = 1;
void Shape::clear_rank() {
  rank_ = 0;
}
::google::protobuf::int32 Shape::rank() const {
  // @@protoc_insertion_point(field_get:upr.Shape.rank)
  return rank_;
}
void Shape::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:upr.Shape.rank)
}

// repeated int32 dim = 2;
int Shape::dim_size() const {
  return dim_.size();
}
void Shape::clear_dim() {
  dim_.Clear();
}
::google::protobuf::int32 Shape::dim(int index) const {
  // @@protoc_insertion_point(field_get:upr.Shape.dim)
  return dim_.Get(index);
}
void Shape::set_dim(int index, ::google::protobuf::int32 value) {
  dim_.Set(index, value);
  // @@protoc_insertion_point(field_set:upr.Shape.dim)
}
void Shape::add_dim(::google::protobuf::int32 value) {
  dim_.Add(value);
  // @@protoc_insertion_point(field_add:upr.Shape.dim)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Shape::dim() const {
  // @@protoc_insertion_point(field_list:upr.Shape.dim)
  return dim_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Shape::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:upr.Shape.dim)
  return &dim_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Layer::_slow_mutable_shape() {
  shape_ = ::google::protobuf::Arena::CreateMessage< ::upr::Shape >(
      GetArenaNoVirtual());
}
::upr::Shape* Layer::_slow_release_shape() {
  if (shape_ == NULL) {
    return NULL;
  } else {
    ::upr::Shape* temp = new ::upr::Shape(*shape_);
    shape_ = NULL;
    return temp;
  }
}
::upr::Shape* Layer::unsafe_arena_release_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Layer.shape)
  
  ::upr::Shape* temp = shape_;
  shape_ = NULL;
  return temp;
}
void Layer::_slow_set_allocated_shape(
    ::google::protobuf::Arena* message_arena, ::upr::Shape** shape) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*shape) == NULL) {
      message_arena->Own(*shape);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*shape)) {
      ::upr::Shape* new_shape = 
            ::google::protobuf::Arena::CreateMessage< ::upr::Shape >(
            message_arena);
      new_shape->CopyFrom(**shape);
      *shape = new_shape;
    }
}
void Layer::unsafe_arena_set_allocated_shape(
    ::upr::Shape* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Layer.shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Layer::kIdFieldNumber;
const int Layer::kNameFieldNumber;
const int Layer::kShapeFieldNumber;
const int Layer::kByteCountFieldNumber;
const int Layer::kIpcHandleFieldNumber;
const int Layer::kDeviceRawPtrFieldNumber;
const int Layer::kRefCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Layer::Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_upr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:upr.Layer)
}
Layer::Layer(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_upr_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:upr.Layer)
}
Layer::Layer(const Layer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  ipc_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipc_handle().size() > 0) {
    ipc_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipc_handle(),
      GetArenaNoVirtual());
  }
  if (from.has_shape()) {
    shape_ = new ::upr::Shape(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&byte_count_, &from.byte_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&ref_count_) -
    reinterpret_cast<char*>(&byte_count_)) + sizeof(ref_count_));
  // @@protoc_insertion_point(copy_constructor:upr.Layer)
}

void Layer::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipc_handle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ref_count_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(ref_count_));
  _cached_size_ = 0;
}

Layer::~Layer() {
  // @@protoc_insertion_point(destructor:upr.Layer)
  SharedDtor();
}

void Layer::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  ipc_handle_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) delete shape_;
}

void Layer::ArenaDtor(void* object) {
  Layer* _this = reinterpret_cast< Layer* >(object);
  (void)_this;
}
void Layer::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Layer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Layer::descriptor() {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Layer& Layer::default_instance() {
  protobuf_upr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Layer* Layer::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Layer>(arena);
}

void Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:upr.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ipc_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  ::memset(&byte_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ref_count_) -
      reinterpret_cast<char*>(&byte_count_)) + sizeof(ref_count_));
  _internal_metadata_.Clear();
}

bool Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upr.Layer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.Layer.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.Layer.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .upr.Shape shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 byte_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &byte_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ipc_handle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipc_handle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipc_handle().data(), static_cast<int>(this->ipc_handle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.Layer.ipc_handle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 device_raw_ptr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_raw_ptr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ref_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ref_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:upr.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upr.Layer)
  return false;
#undef DO_
}

void Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upr.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Layer.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Layer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .upr.Shape shape = 3;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->shape_, output);
  }

  // int64 byte_count = 4;
  if (this->byte_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->byte_count(), output);
  }

  // string ipc_handle = 5;
  if (this->ipc_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipc_handle().data(), static_cast<int>(this->ipc_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Layer.ipc_handle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ipc_handle(), output);
  }

  // int64 device_raw_ptr = 6;
  if (this->device_raw_ptr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->device_raw_ptr(), output);
  }

  // int64 ref_count = 7;
  if (this->ref_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->ref_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:upr.Layer)
}

::google::protobuf::uint8* Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:upr.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Layer.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Layer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .upr.Shape shape = 3;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->shape_, deterministic, target);
  }

  // int64 byte_count = 4;
  if (this->byte_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->byte_count(), target);
  }

  // string ipc_handle = 5;
  if (this->ipc_handle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipc_handle().data(), static_cast<int>(this->ipc_handle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Layer.ipc_handle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ipc_handle(), target);
  }

  // int64 device_raw_ptr = 6;
  if (this->device_raw_ptr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->device_raw_ptr(), target);
  }

  // int64 ref_count = 7;
  if (this->ref_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->ref_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upr.Layer)
  return target;
}

size_t Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:upr.Layer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string ipc_handle = 5;
  if (this->ipc_handle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipc_handle());
  }

  // .upr.Shape shape = 3;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shape_);
  }

  // int64 byte_count = 4;
  if (this->byte_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->byte_count());
  }

  // int64 device_raw_ptr = 6;
  if (this->device_raw_ptr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_raw_ptr());
  }

  // int64 ref_count = 7;
  if (this->ref_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ref_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:upr.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  const Layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:upr.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:upr.Layer)
    MergeFrom(*source);
  }
}

void Layer::MergeFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:upr.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.ipc_handle().size() > 0) {
    set_ipc_handle(from.ipc_handle());
  }
  if (from.has_shape()) {
    mutable_shape()->::upr::Shape::MergeFrom(from.shape());
  }
  if (from.byte_count() != 0) {
    set_byte_count(from.byte_count());
  }
  if (from.device_raw_ptr() != 0) {
    set_device_raw_ptr(from.device_raw_ptr());
  }
  if (from.ref_count() != 0) {
    set_ref_count(from.ref_count());
  }
}

void Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:upr.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Layer::CopyFrom(const Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upr.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Layer::IsInitialized() const {
  return true;
}

void Layer::Swap(Layer* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Layer* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Layer::UnsafeArenaSwap(Layer* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Layer::InternalSwap(Layer* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  ipc_handle_.Swap(&other->ipc_handle_);
  swap(shape_, other->shape_);
  swap(byte_count_, other->byte_count_);
  swap(device_raw_ptr_, other->device_raw_ptr_);
  swap(ref_count_, other->ref_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Layer::GetMetadata() const {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Layer

// string id = 1;
void Layer::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Layer::id() const {
  // @@protoc_insertion_point(field_get:upr.Layer.id)
  return id_.Get();
}
void Layer::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.Layer.id)
}
#if LANG_CXX11
void Layer::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.Layer.id)
}
#endif
void Layer::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.Layer.id)
}
void Layer::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.Layer.id)
}
::std::string* Layer::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:upr.Layer.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Layer::release_id() {
  // @@protoc_insertion_point(field_release:upr.Layer.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Layer::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Layer.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Layer::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.Layer.id)
}
void Layer::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Layer.id)
}

// string name = 2;
void Layer::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Layer::name() const {
  // @@protoc_insertion_point(field_get:upr.Layer.name)
  return name_.Get();
}
void Layer::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.Layer.name)
}
#if LANG_CXX11
void Layer::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.Layer.name)
}
#endif
void Layer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.Layer.name)
}
void Layer::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.Layer.name)
}
::std::string* Layer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:upr.Layer.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Layer::release_name() {
  // @@protoc_insertion_point(field_release:upr.Layer.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Layer::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Layer.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Layer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.Layer.name)
}
void Layer::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Layer.name)
}

// .upr.Shape shape = 3;
bool Layer::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
void Layer::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}
const ::upr::Shape& Layer::shape() const {
  const ::upr::Shape* p = shape_;
  // @@protoc_insertion_point(field_get:upr.Layer.shape)
  return p != NULL ? *p : *reinterpret_cast<const ::upr::Shape*>(
      &::upr::_Shape_default_instance_);
}
::upr::Shape* Layer::mutable_shape() {
  
  if (shape_ == NULL) {
    _slow_mutable_shape();
  }
  // @@protoc_insertion_point(field_mutable:upr.Layer.shape)
  return shape_;
}
::upr::Shape* Layer::release_shape() {
  // @@protoc_insertion_point(field_release:upr.Layer.shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_shape();
  } else {
    ::upr::Shape* temp = shape_;
    shape_ = NULL;
    return temp;
  }
}
 void Layer::set_allocated_shape(::upr::Shape* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape != NULL) {
    _slow_set_allocated_shape(message_arena, &shape);
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:upr.Layer.shape)
}

// int64 byte_count = 4;
void Layer::clear_byte_count() {
  byte_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Layer::byte_count() const {
  // @@protoc_insertion_point(field_get:upr.Layer.byte_count)
  return byte_count_;
}
void Layer::set_byte_count(::google::protobuf::int64 value) {
  
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Layer.byte_count)
}

// string ipc_handle = 5;
void Layer::clear_ipc_handle() {
  ipc_handle_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Layer::ipc_handle() const {
  // @@protoc_insertion_point(field_get:upr.Layer.ipc_handle)
  return ipc_handle_.Get();
}
void Layer::set_ipc_handle(const ::std::string& value) {
  
  ipc_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.Layer.ipc_handle)
}
#if LANG_CXX11
void Layer::set_ipc_handle(::std::string&& value) {
  
  ipc_handle_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.Layer.ipc_handle)
}
#endif
void Layer::set_ipc_handle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ipc_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.Layer.ipc_handle)
}
void Layer::set_ipc_handle(const char* value,
    size_t size) {
  
  ipc_handle_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.Layer.ipc_handle)
}
::std::string* Layer::mutable_ipc_handle() {
  
  // @@protoc_insertion_point(field_mutable:upr.Layer.ipc_handle)
  return ipc_handle_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Layer::release_ipc_handle() {
  // @@protoc_insertion_point(field_release:upr.Layer.ipc_handle)
  
  return ipc_handle_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Layer::unsafe_arena_release_ipc_handle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Layer.ipc_handle)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return ipc_handle_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Layer::set_allocated_ipc_handle(::std::string* ipc_handle) {
  if (ipc_handle != NULL) {
    
  } else {
    
  }
  ipc_handle_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ipc_handle,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.Layer.ipc_handle)
}
void Layer::unsafe_arena_set_allocated_ipc_handle(
    ::std::string* ipc_handle) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (ipc_handle != NULL) {
    
  } else {
    
  }
  ipc_handle_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ipc_handle, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Layer.ipc_handle)
}

// int64 device_raw_ptr = 6;
void Layer::clear_device_raw_ptr() {
  device_raw_ptr_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Layer::device_raw_ptr() const {
  // @@protoc_insertion_point(field_get:upr.Layer.device_raw_ptr)
  return device_raw_ptr_;
}
void Layer::set_device_raw_ptr(::google::protobuf::int64 value) {
  
  device_raw_ptr_ = value;
  // @@protoc_insertion_point(field_set:upr.Layer.device_raw_ptr)
}

// int64 ref_count = 7;
void Layer::clear_ref_count() {
  ref_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Layer::ref_count() const {
  // @@protoc_insertion_point(field_get:upr.Layer.ref_count)
  return ref_count_;
}
void Layer::set_ref_count(::google::protobuf::int64 value) {
  
  ref_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Layer.ref_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelHandle::kIdFieldNumber;
const int ModelHandle::kModelIdFieldNumber;
const int ModelHandle::kByteCountFieldNumber;
const int ModelHandle::kLayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelHandle::ModelHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_upr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:upr.ModelHandle)
}
ModelHandle::ModelHandle(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  layer_(arena) {
  protobuf_upr_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:upr.ModelHandle)
}
ModelHandle::ModelHandle(const ModelHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      layer_(from.layer_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  model_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model_id().size() > 0) {
    model_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_id(),
      GetArenaNoVirtual());
  }
  byte_count_ = from.byte_count_;
  // @@protoc_insertion_point(copy_constructor:upr.ModelHandle)
}

void ModelHandle::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  byte_count_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ModelHandle::~ModelHandle() {
  // @@protoc_insertion_point(destructor:upr.ModelHandle)
  SharedDtor();
}

void ModelHandle::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  model_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ModelHandle::ArenaDtor(void* object) {
  ModelHandle* _this = reinterpret_cast< ModelHandle* >(object);
  (void)_this;
}
void ModelHandle::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelHandle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelHandle::descriptor() {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelHandle& ModelHandle::default_instance() {
  protobuf_upr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModelHandle* ModelHandle::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ModelHandle>(arena);
}

void ModelHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:upr.ModelHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layer_.Clear();
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  model_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  byte_count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ModelHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upr.ModelHandle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.ModelHandle.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string model_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model_id().data(), static_cast<int>(this->model_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.ModelHandle.model_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 byte_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &byte_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .upr.Layer layer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_layer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:upr.ModelHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upr.ModelHandle)
  return false;
#undef DO_
}

void ModelHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upr.ModelHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelHandle.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string model_id = 2;
  if (this->model_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_id().data(), static_cast<int>(this->model_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelHandle.model_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->model_id(), output);
  }

  // int64 byte_count = 3;
  if (this->byte_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->byte_count(), output);
  }

  // repeated .upr.Layer layer = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->layer(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:upr.ModelHandle)
}

::google::protobuf::uint8* ModelHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:upr.ModelHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelHandle.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string model_id = 2;
  if (this->model_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_id().data(), static_cast<int>(this->model_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelHandle.model_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->model_id(), target);
  }

  // int64 byte_count = 3;
  if (this->byte_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->byte_count(), target);
  }

  // repeated .upr.Layer layer = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->layer(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upr.ModelHandle)
  return target;
}

size_t ModelHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:upr.ModelHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .upr.Layer layer = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->layer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->layer(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string model_id = 2;
  if (this->model_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model_id());
  }

  // int64 byte_count = 3;
  if (this->byte_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->byte_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:upr.ModelHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:upr.ModelHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:upr.ModelHandle)
    MergeFrom(*source);
  }
}

void ModelHandle::MergeFrom(const ModelHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:upr.ModelHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layer_.MergeFrom(from.layer_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.model_id().size() > 0) {
    set_model_id(from.model_id());
  }
  if (from.byte_count() != 0) {
    set_byte_count(from.byte_count());
  }
}

void ModelHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:upr.ModelHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelHandle::CopyFrom(const ModelHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upr.ModelHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelHandle::IsInitialized() const {
  return true;
}

void ModelHandle::Swap(ModelHandle* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelHandle* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelHandle::UnsafeArenaSwap(ModelHandle* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelHandle::InternalSwap(ModelHandle* other) {
  using std::swap;
  layer_.InternalSwap(&other->layer_);
  id_.Swap(&other->id_);
  model_id_.Swap(&other->model_id_);
  swap(byte_count_, other->byte_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelHandle::GetMetadata() const {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelHandle

// string id = 1;
void ModelHandle::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ModelHandle::id() const {
  // @@protoc_insertion_point(field_get:upr.ModelHandle.id)
  return id_.Get();
}
void ModelHandle::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.ModelHandle.id)
}
#if LANG_CXX11
void ModelHandle::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.ModelHandle.id)
}
#endif
void ModelHandle::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.ModelHandle.id)
}
void ModelHandle::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.ModelHandle.id)
}
::std::string* ModelHandle::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:upr.ModelHandle.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelHandle::release_id() {
  // @@protoc_insertion_point(field_release:upr.ModelHandle.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelHandle::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.ModelHandle.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ModelHandle::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.ModelHandle.id)
}
void ModelHandle::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.ModelHandle.id)
}

// string model_id = 2;
void ModelHandle::clear_model_id() {
  model_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ModelHandle::model_id() const {
  // @@protoc_insertion_point(field_get:upr.ModelHandle.model_id)
  return model_id_.Get();
}
void ModelHandle::set_model_id(const ::std::string& value) {
  
  model_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.ModelHandle.model_id)
}
#if LANG_CXX11
void ModelHandle::set_model_id(::std::string&& value) {
  
  model_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.ModelHandle.model_id)
}
#endif
void ModelHandle::set_model_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.ModelHandle.model_id)
}
void ModelHandle::set_model_id(const char* value,
    size_t size) {
  
  model_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.ModelHandle.model_id)
}
::std::string* ModelHandle::mutable_model_id() {
  
  // @@protoc_insertion_point(field_mutable:upr.ModelHandle.model_id)
  return model_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelHandle::release_model_id() {
  // @@protoc_insertion_point(field_release:upr.ModelHandle.model_id)
  
  return model_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelHandle::unsafe_arena_release_model_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.ModelHandle.model_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return model_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ModelHandle::set_allocated_model_id(::std::string* model_id) {
  if (model_id != NULL) {
    
  } else {
    
  }
  model_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.ModelHandle.model_id)
}
void ModelHandle::unsafe_arena_set_allocated_model_id(
    ::std::string* model_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (model_id != NULL) {
    
  } else {
    
  }
  model_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      model_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.ModelHandle.model_id)
}

// int64 byte_count = 3;
void ModelHandle::clear_byte_count() {
  byte_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ModelHandle::byte_count() const {
  // @@protoc_insertion_point(field_get:upr.ModelHandle.byte_count)
  return byte_count_;
}
void ModelHandle::set_byte_count(::google::protobuf::int64 value) {
  
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:upr.ModelHandle.byte_count)
}

// repeated .upr.Layer layer = 4;
int ModelHandle::layer_size() const {
  return layer_.size();
}
void ModelHandle::clear_layer() {
  layer_.Clear();
}
const ::upr::Layer& ModelHandle::layer(int index) const {
  // @@protoc_insertion_point(field_get:upr.ModelHandle.layer)
  return layer_.Get(index);
}
::upr::Layer* ModelHandle::mutable_layer(int index) {
  // @@protoc_insertion_point(field_mutable:upr.ModelHandle.layer)
  return layer_.Mutable(index);
}
::upr::Layer* ModelHandle::add_layer() {
  // @@protoc_insertion_point(field_add:upr.ModelHandle.layer)
  return layer_.Add();
}
::google::protobuf::RepeatedPtrField< ::upr::Layer >*
ModelHandle::mutable_layer() {
  // @@protoc_insertion_point(field_mutable_list:upr.ModelHandle.layer)
  return &layer_;
}
const ::google::protobuf::RepeatedPtrField< ::upr::Layer >&
ModelHandle::layer() const {
  // @@protoc_insertion_point(field_list:upr.ModelHandle.layer)
  return layer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Model::_slow_mutable_owned_model() {
  owned_model_ = ::google::protobuf::Arena::CreateMessage< ::upr::ModelHandle >(
      GetArenaNoVirtual());
}
::upr::ModelHandle* Model::_slow_release_owned_model() {
  if (owned_model_ == NULL) {
    return NULL;
  } else {
    ::upr::ModelHandle* temp = new ::upr::ModelHandle(*owned_model_);
    owned_model_ = NULL;
    return temp;
  }
}
::upr::ModelHandle* Model::unsafe_arena_release_owned_model() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Model.owned_model)
  
  ::upr::ModelHandle* temp = owned_model_;
  owned_model_ = NULL;
  return temp;
}
void Model::_slow_set_allocated_owned_model(
    ::google::protobuf::Arena* message_arena, ::upr::ModelHandle** owned_model) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*owned_model) == NULL) {
      message_arena->Own(*owned_model);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*owned_model)) {
      ::upr::ModelHandle* new_owned_model = 
            ::google::protobuf::Arena::CreateMessage< ::upr::ModelHandle >(
            message_arena);
      new_owned_model->CopyFrom(**owned_model);
      *owned_model = new_owned_model;
    }
}
void Model::unsafe_arena_set_allocated_owned_model(
    ::upr::ModelHandle* owned_model) {
  if (GetArenaNoVirtual() == NULL) {
    delete owned_model_;
  }
  owned_model_ = owned_model;
  if (owned_model) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Model.owned_model)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Model::kIdFieldNumber;
const int Model::kNameFieldNumber;
const int Model::kFilePathFieldNumber;
const int Model::kRefCountFieldNumber;
const int Model::kOwnedModelFieldNumber;
const int Model::kSharedModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Model::Model()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_upr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:upr.Model)
}
Model::Model(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  shared_model_(arena) {
  protobuf_upr_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:upr.Model)
}
Model::Model(const Model& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shared_model_(from.shared_model_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_path().size() > 0) {
    file_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_path(),
      GetArenaNoVirtual());
  }
  if (from.has_owned_model()) {
    owned_model_ = new ::upr::ModelHandle(*from.owned_model_);
  } else {
    owned_model_ = NULL;
  }
  ref_count_ = from.ref_count_;
  // @@protoc_insertion_point(copy_constructor:upr.Model)
}

void Model::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owned_model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ref_count_) -
      reinterpret_cast<char*>(&owned_model_)) + sizeof(ref_count_));
  _cached_size_ = 0;
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:upr.Model)
  SharedDtor();
}

void Model::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  file_path_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) delete owned_model_;
}

void Model::ArenaDtor(void* object) {
  Model* _this = reinterpret_cast< Model* >(object);
  (void)_this;
}
void Model::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Model::descriptor() {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Model& Model::default_instance() {
  protobuf_upr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Model* Model::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Model>(arena);
}

void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:upr.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shared_model_.Clear();
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  file_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && owned_model_ != NULL) {
    delete owned_model_;
  }
  owned_model_ = NULL;
  ref_count_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upr.Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.Model.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.Model.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_path().data(), static_cast<int>(this->file_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.Model.file_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ref_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ref_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .upr.ModelHandle owned_model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_owned_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .upr.ModelHandle shared_model = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shared_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:upr.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upr.Model)
  return false;
#undef DO_
}

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upr.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Model.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Model.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string file_path = 3;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Model.file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_path(), output);
  }

  // int64 ref_count = 4;
  if (this->ref_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->ref_count(), output);
  }

  // .upr.ModelHandle owned_model = 5;
  if (this->has_owned_model()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->owned_model_, output);
  }

  // repeated .upr.ModelHandle shared_model = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shared_model_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->shared_model(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:upr.Model)
}

::google::protobuf::uint8* Model::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:upr.Model)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Model.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Model.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string file_path = 3;
  if (this->file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_path().data(), static_cast<int>(this->file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.Model.file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_path(), target);
  }

  // int64 ref_count = 4;
  if (this->ref_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->ref_count(), target);
  }

  // .upr.ModelHandle owned_model = 5;
  if (this->has_owned_model()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->owned_model_, deterministic, target);
  }

  // repeated .upr.ModelHandle shared_model = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shared_model_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->shared_model(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upr.Model)
  return target;
}

size_t Model::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:upr.Model)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .upr.ModelHandle shared_model = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->shared_model_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shared_model(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string file_path = 3;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_path());
  }

  // .upr.ModelHandle owned_model = 5;
  if (this->has_owned_model()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->owned_model_);
  }

  // int64 ref_count = 4;
  if (this->ref_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ref_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:upr.Model)
  GOOGLE_DCHECK_NE(&from, this);
  const Model* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Model>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:upr.Model)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:upr.Model)
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:upr.Model)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shared_model_.MergeFrom(from.shared_model_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.file_path().size() > 0) {
    set_file_path(from.file_path());
  }
  if (from.has_owned_model()) {
    mutable_owned_model()->::upr::ModelHandle::MergeFrom(from.owned_model());
  }
  if (from.ref_count() != 0) {
    set_ref_count(from.ref_count());
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:upr.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upr.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Model* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Model::UnsafeArenaSwap(Model* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  using std::swap;
  shared_model_.InternalSwap(&other->shared_model_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  file_path_.Swap(&other->file_path_);
  swap(owned_model_, other->owned_model_);
  swap(ref_count_, other->ref_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Model

// string id = 1;
void Model::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Model::id() const {
  // @@protoc_insertion_point(field_get:upr.Model.id)
  return id_.Get();
}
void Model::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.Model.id)
}
#if LANG_CXX11
void Model::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.Model.id)
}
#endif
void Model::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.Model.id)
}
void Model::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.Model.id)
}
::std::string* Model::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:upr.Model.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Model::release_id() {
  // @@protoc_insertion_point(field_release:upr.Model.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Model::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Model.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Model::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.Model.id)
}
void Model::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Model.id)
}

// string name = 2;
void Model::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Model::name() const {
  // @@protoc_insertion_point(field_get:upr.Model.name)
  return name_.Get();
}
void Model::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.Model.name)
}
#if LANG_CXX11
void Model::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.Model.name)
}
#endif
void Model::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.Model.name)
}
void Model::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.Model.name)
}
::std::string* Model::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:upr.Model.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Model::release_name() {
  // @@protoc_insertion_point(field_release:upr.Model.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Model::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Model.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Model::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.Model.name)
}
void Model::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Model.name)
}

// string file_path = 3;
void Model::clear_file_path() {
  file_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Model::file_path() const {
  // @@protoc_insertion_point(field_get:upr.Model.file_path)
  return file_path_.Get();
}
void Model::set_file_path(const ::std::string& value) {
  
  file_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.Model.file_path)
}
#if LANG_CXX11
void Model::set_file_path(::std::string&& value) {
  
  file_path_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.Model.file_path)
}
#endif
void Model::set_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.Model.file_path)
}
void Model::set_file_path(const char* value,
    size_t size) {
  
  file_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.Model.file_path)
}
::std::string* Model::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:upr.Model.file_path)
  return file_path_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Model::release_file_path() {
  // @@protoc_insertion_point(field_release:upr.Model.file_path)
  
  return file_path_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Model::unsafe_arena_release_file_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.Model.file_path)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return file_path_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Model::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.Model.file_path)
}
void Model::unsafe_arena_set_allocated_file_path(
    ::std::string* file_path) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      file_path, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.Model.file_path)
}

// int64 ref_count = 4;
void Model::clear_ref_count() {
  ref_count_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Model::ref_count() const {
  // @@protoc_insertion_point(field_get:upr.Model.ref_count)
  return ref_count_;
}
void Model::set_ref_count(::google::protobuf::int64 value) {
  
  ref_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Model.ref_count)
}

// .upr.ModelHandle owned_model = 5;
bool Model::has_owned_model() const {
  return this != internal_default_instance() && owned_model_ != NULL;
}
void Model::clear_owned_model() {
  if (GetArenaNoVirtual() == NULL && owned_model_ != NULL) delete owned_model_;
  owned_model_ = NULL;
}
const ::upr::ModelHandle& Model::owned_model() const {
  const ::upr::ModelHandle* p = owned_model_;
  // @@protoc_insertion_point(field_get:upr.Model.owned_model)
  return p != NULL ? *p : *reinterpret_cast<const ::upr::ModelHandle*>(
      &::upr::_ModelHandle_default_instance_);
}
::upr::ModelHandle* Model::mutable_owned_model() {
  
  if (owned_model_ == NULL) {
    _slow_mutable_owned_model();
  }
  // @@protoc_insertion_point(field_mutable:upr.Model.owned_model)
  return owned_model_;
}
::upr::ModelHandle* Model::release_owned_model() {
  // @@protoc_insertion_point(field_release:upr.Model.owned_model)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_owned_model();
  } else {
    ::upr::ModelHandle* temp = owned_model_;
    owned_model_ = NULL;
    return temp;
  }
}
 void Model::set_allocated_owned_model(::upr::ModelHandle* owned_model) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owned_model_;
  }
  if (owned_model != NULL) {
    _slow_set_allocated_owned_model(message_arena, &owned_model);
  }
  owned_model_ = owned_model;
  if (owned_model) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:upr.Model.owned_model)
}

// repeated .upr.ModelHandle shared_model = 6;
int Model::shared_model_size() const {
  return shared_model_.size();
}
void Model::clear_shared_model() {
  shared_model_.Clear();
}
const ::upr::ModelHandle& Model::shared_model(int index) const {
  // @@protoc_insertion_point(field_get:upr.Model.shared_model)
  return shared_model_.Get(index);
}
::upr::ModelHandle* Model::mutable_shared_model(int index) {
  // @@protoc_insertion_point(field_mutable:upr.Model.shared_model)
  return shared_model_.Mutable(index);
}
::upr::ModelHandle* Model::add_shared_model() {
  // @@protoc_insertion_point(field_add:upr.Model.shared_model)
  return shared_model_.Add();
}
::google::protobuf::RepeatedPtrField< ::upr::ModelHandle >*
Model::mutable_shared_model() {
  // @@protoc_insertion_point(field_mutable_list:upr.Model.shared_model)
  return &shared_model_;
}
const ::google::protobuf::RepeatedPtrField< ::upr::ModelHandle >&
Model::shared_model() const {
  // @@protoc_insertion_point(field_list:upr.Model.shared_model)
  return shared_model_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelRequest::kNameFieldNumber;
const int ModelRequest::kDirectoryPathFieldNumber;
const int ModelRequest::kNoCacheFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelRequest::ModelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_upr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:upr.ModelRequest)
}
ModelRequest::ModelRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_upr_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:upr.ModelRequest)
}
ModelRequest::ModelRequest(const ModelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  directory_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.directory_path().size() > 0) {
    directory_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.directory_path(),
      GetArenaNoVirtual());
  }
  no_cache_ = from.no_cache_;
  // @@protoc_insertion_point(copy_constructor:upr.ModelRequest)
}

void ModelRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  no_cache_ = false;
  _cached_size_ = 0;
}

ModelRequest::~ModelRequest() {
  // @@protoc_insertion_point(destructor:upr.ModelRequest)
  SharedDtor();
}

void ModelRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  directory_path_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ModelRequest::ArenaDtor(void* object) {
  ModelRequest* _this = reinterpret_cast< ModelRequest* >(object);
  (void)_this;
}
void ModelRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ModelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelRequest::descriptor() {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelRequest& ModelRequest::default_instance() {
  protobuf_upr_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModelRequest* ModelRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ModelRequest>(arena);
}

void ModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:upr.ModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  directory_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  no_cache_ = false;
  _internal_metadata_.Clear();
}

bool ModelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upr.ModelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.ModelRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string directory_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_directory_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->directory_path().data(), static_cast<int>(this->directory_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "upr.ModelRequest.directory_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool no_cache = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:upr.ModelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upr.ModelRequest)
  return false;
#undef DO_
}

void ModelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upr.ModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string directory_path = 2;
  if (this->directory_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory_path().data(), static_cast<int>(this->directory_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelRequest.directory_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->directory_path(), output);
  }

  // bool no_cache = 3;
  if (this->no_cache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->no_cache(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:upr.ModelRequest)
}

::google::protobuf::uint8* ModelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:upr.ModelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string directory_path = 2;
  if (this->directory_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->directory_path().data(), static_cast<int>(this->directory_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "upr.ModelRequest.directory_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->directory_path(), target);
  }

  // bool no_cache = 3;
  if (this->no_cache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->no_cache(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upr.ModelRequest)
  return target;
}

size_t ModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:upr.ModelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string directory_path = 2;
  if (this->directory_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->directory_path());
  }

  // bool no_cache = 3;
  if (this->no_cache() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:upr.ModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:upr.ModelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:upr.ModelRequest)
    MergeFrom(*source);
  }
}

void ModelRequest::MergeFrom(const ModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:upr.ModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.directory_path().size() > 0) {
    set_directory_path(from.directory_path());
  }
  if (from.no_cache() != 0) {
    set_no_cache(from.no_cache());
  }
}

void ModelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:upr.ModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelRequest::CopyFrom(const ModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upr.ModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelRequest::IsInitialized() const {
  return true;
}

void ModelRequest::Swap(ModelRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ModelRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ModelRequest::UnsafeArenaSwap(ModelRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ModelRequest::InternalSwap(ModelRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  directory_path_.Swap(&other->directory_path_);
  swap(no_cache_, other->no_cache_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelRequest::GetMetadata() const {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelRequest

// string name = 1;
void ModelRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ModelRequest::name() const {
  // @@protoc_insertion_point(field_get:upr.ModelRequest.name)
  return name_.Get();
}
void ModelRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.ModelRequest.name)
}
#if LANG_CXX11
void ModelRequest::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.ModelRequest.name)
}
#endif
void ModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.ModelRequest.name)
}
void ModelRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.ModelRequest.name)
}
::std::string* ModelRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:upr.ModelRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:upr.ModelRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.ModelRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ModelRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.ModelRequest.name)
}
void ModelRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.ModelRequest.name)
}

// string directory_path = 2;
void ModelRequest::clear_directory_path() {
  directory_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ModelRequest::directory_path() const {
  // @@protoc_insertion_point(field_get:upr.ModelRequest.directory_path)
  return directory_path_.Get();
}
void ModelRequest::set_directory_path(const ::std::string& value) {
  
  directory_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:upr.ModelRequest.directory_path)
}
#if LANG_CXX11
void ModelRequest::set_directory_path(::std::string&& value) {
  
  directory_path_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:upr.ModelRequest.directory_path)
}
#endif
void ModelRequest::set_directory_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  directory_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:upr.ModelRequest.directory_path)
}
void ModelRequest::set_directory_path(const char* value,
    size_t size) {
  
  directory_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:upr.ModelRequest.directory_path)
}
::std::string* ModelRequest::mutable_directory_path() {
  
  // @@protoc_insertion_point(field_mutable:upr.ModelRequest.directory_path)
  return directory_path_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelRequest::release_directory_path() {
  // @@protoc_insertion_point(field_release:upr.ModelRequest.directory_path)
  
  return directory_path_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ModelRequest::unsafe_arena_release_directory_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upr.ModelRequest.directory_path)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return directory_path_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ModelRequest::set_allocated_directory_path(::std::string* directory_path) {
  if (directory_path != NULL) {
    
  } else {
    
  }
  directory_path_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory_path,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:upr.ModelRequest.directory_path)
}
void ModelRequest::unsafe_arena_set_allocated_directory_path(
    ::std::string* directory_path) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (directory_path != NULL) {
    
  } else {
    
  }
  directory_path_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      directory_path, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upr.ModelRequest.directory_path)
}

// bool no_cache = 3;
void ModelRequest::clear_no_cache() {
  no_cache_ = false;
}
bool ModelRequest::no_cache() const {
  // @@protoc_insertion_point(field_get:upr.ModelRequest.no_cache)
  return no_cache_;
}
void ModelRequest::set_no_cache(bool value) {
  
  no_cache_ = value;
  // @@protoc_insertion_point(field_set:upr.ModelRequest.no_cache)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Void::Void()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_upr_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:upr.Void)
}
Void::Void(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  protobuf_upr_2eproto::InitDefaults();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:upr.Void)
}
Void::Void(const Void& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:upr.Void)
}

void Void::SharedCtor() {
  _cached_size_ = 0;
}

Void::~Void() {
  // @@protoc_insertion_point(destructor:upr.Void)
  SharedDtor();
}

void Void::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  GOOGLE_DCHECK(arena == NULL);
  if (arena != NULL) {
    return;
  }

}

void Void::ArenaDtor(void* object) {
  Void* _this = reinterpret_cast< Void* >(object);
  (void)_this;
}
void Void::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Void::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Void::descriptor() {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Void& Void::default_instance() {
  protobuf_upr_2eproto::InitDefaults();
  return *internal_default_instance();
}

Void* Void::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Void>(arena);
}

void Void::Clear() {
// @@protoc_insertion_point(message_clear_start:upr.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Void::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:upr.Void)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:upr.Void)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:upr.Void)
  return false;
#undef DO_
}

void Void::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:upr.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:upr.Void)
}

::google::protobuf::uint8* Void::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:upr.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:upr.Void)
  return target;
}

size_t Void::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:upr.Void)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Void::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:upr.Void)
  GOOGLE_DCHECK_NE(&from, this);
  const Void* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Void>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:upr.Void)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:upr.Void)
    MergeFrom(*source);
  }
}

void Void::MergeFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:upr.Void)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Void::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:upr.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Void::CopyFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upr.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Void::IsInitialized() const {
  return true;
}

void Void::Swap(Void* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Void* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Void::UnsafeArenaSwap(Void* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Void::InternalSwap(Void* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Void::GetMetadata() const {
  protobuf_upr_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_upr_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Void

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace upr

// @@protoc_insertion_point(global_scope)
