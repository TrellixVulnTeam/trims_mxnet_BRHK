// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: upr.proto

#ifndef PROTOBUF_upr_2eproto__INCLUDED
#define PROTOBUF_upr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace upr {
class Layer;
class LayerDefaultTypeInternal;
extern LayerDefaultTypeInternal _Layer_default_instance_;
class Model;
class ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class ModelRequest;
class ModelRequestDefaultTypeInternal;
extern ModelRequestDefaultTypeInternal _ModelRequest_default_instance_;
class Void;
class VoidDefaultTypeInternal;
extern VoidDefaultTypeInternal _Void_default_instance_;
}  // namespace upr

namespace upr {

namespace protobuf_upr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_upr_2eproto

// ===================================================================

class Layer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:upr.Layer) */ {
 public:
  Layer();
  virtual ~Layer();

  Layer(const Layer& from);

  inline Layer& operator=(const Layer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Layer(Layer&& from) noexcept
    : Layer() {
    *this = ::std::move(from);
  }

  inline Layer& operator=(Layer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Layer& default_instance();

  static inline const Layer* internal_default_instance() {
    return reinterpret_cast<const Layer*>(
               &_Layer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Layer* other);
  friend void swap(Layer& a, Layer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Layer* New() const PROTOBUF_FINAL { return New(NULL); }

  Layer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Layer& from);
  void MergeFrom(const Layer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Layer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string handle_path = 3;
  void clear_handle_path();
  static const int kHandlePathFieldNumber = 3;
  const ::std::string& handle_path() const;
  void set_handle_path(const ::std::string& value);
  #if LANG_CXX11
  void set_handle_path(::std::string&& value);
  #endif
  void set_handle_path(const char* value);
  void set_handle_path(const char* value, size_t size);
  ::std::string* mutable_handle_path();
  ::std::string* release_handle_path();
  void set_allocated_handle_path(::std::string* handle_path);

  // int64 byte_count = 2;
  void clear_byte_count();
  static const int kByteCountFieldNumber = 2;
  ::google::protobuf::int64 byte_count() const;
  void set_byte_count(::google::protobuf::int64 value);

  // int64 raw_ptr = 4;
  void clear_raw_ptr();
  static const int kRawPtrFieldNumber = 4;
  ::google::protobuf::int64 raw_ptr() const;
  void set_raw_ptr(::google::protobuf::int64 value);

  // int64 ref_count = 5;
  void clear_ref_count();
  static const int kRefCountFieldNumber = 5;
  ::google::protobuf::int64 ref_count() const;
  void set_ref_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:upr.Layer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr handle_path_;
  ::google::protobuf::int64 byte_count_;
  ::google::protobuf::int64 raw_ptr_;
  ::google::protobuf::int64 ref_count_;
  mutable int _cached_size_;
  friend struct protobuf_upr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Model : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:upr.Model) */ {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Model& default_instance();

  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Model* other);
  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Model* New() const PROTOBUF_FINAL { return New(NULL); }

  Model* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Model* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .upr.Layer layers = 5;
  int layers_size() const;
  void clear_layers();
  static const int kLayersFieldNumber = 5;
  const ::upr::Layer& layers(int index) const;
  ::upr::Layer* mutable_layers(int index);
  ::upr::Layer* add_layers();
  ::google::protobuf::RepeatedPtrField< ::upr::Layer >*
      mutable_layers();
  const ::google::protobuf::RepeatedPtrField< ::upr::Layer >&
      layers() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string file_path = 2;
  void clear_file_path();
  static const int kFilePathFieldNumber = 2;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_file_path(::std::string&& value);
  #endif
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // int64 ref_count = 3;
  void clear_ref_count();
  static const int kRefCountFieldNumber = 3;
  ::google::protobuf::int64 ref_count() const;
  void set_ref_count(::google::protobuf::int64 value);

  // int64 byte_count = 4;
  void clear_byte_count();
  static const int kByteCountFieldNumber = 4;
  ::google::protobuf::int64 byte_count() const;
  void set_byte_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:upr.Model)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::upr::Layer > layers_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  ::google::protobuf::int64 ref_count_;
  ::google::protobuf::int64 byte_count_;
  mutable int _cached_size_;
  friend struct protobuf_upr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:upr.ModelRequest) */ {
 public:
  ModelRequest();
  virtual ~ModelRequest();

  ModelRequest(const ModelRequest& from);

  inline ModelRequest& operator=(const ModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelRequest(ModelRequest&& from) noexcept
    : ModelRequest() {
    *this = ::std::move(from);
  }

  inline ModelRequest& operator=(ModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelRequest& default_instance();

  static inline const ModelRequest* internal_default_instance() {
    return reinterpret_cast<const ModelRequest*>(
               &_ModelRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ModelRequest* other);
  friend void swap(ModelRequest& a, ModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ModelRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModelRequest& from);
  void MergeFrom(const ModelRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string model_name = 1;
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  #if LANG_CXX11
  void set_model_name(::std::string&& value);
  #endif
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // string file_path = 2;
  void clear_file_path();
  static const int kFilePathFieldNumber = 2;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_file_path(::std::string&& value);
  #endif
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // bool no_cache = 3;
  void clear_no_cache();
  static const int kNoCacheFieldNumber = 3;
  bool no_cache() const;
  void set_no_cache(bool value);

  // @@protoc_insertion_point(class_scope:upr.ModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  bool no_cache_;
  mutable int _cached_size_;
  friend struct protobuf_upr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Void : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:upr.Void) */ {
 public:
  Void();
  virtual ~Void();

  Void(const Void& from);

  inline Void& operator=(const Void& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Void(Void&& from) noexcept
    : Void() {
    *this = ::std::move(from);
  }

  inline Void& operator=(Void&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Void& default_instance();

  static inline const Void* internal_default_instance() {
    return reinterpret_cast<const Void*>(
               &_Void_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Void* other);
  friend void swap(Void& a, Void& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Void* New() const PROTOBUF_FINAL { return New(NULL); }

  Void* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Void& from);
  void MergeFrom(const Void& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Void* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:upr.Void)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_upr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Layer

// string name = 1;
inline void Layer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Layer::name() const {
  // @@protoc_insertion_point(field_get:upr.Layer.name)
  return name_.GetNoArena();
}
inline void Layer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:upr.Layer.name)
}
#if LANG_CXX11
inline void Layer::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:upr.Layer.name)
}
#endif
inline void Layer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:upr.Layer.name)
}
inline void Layer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:upr.Layer.name)
}
inline ::std::string* Layer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:upr.Layer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Layer::release_name() {
  // @@protoc_insertion_point(field_release:upr.Layer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Layer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:upr.Layer.name)
}

// int64 byte_count = 2;
inline void Layer::clear_byte_count() {
  byte_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Layer::byte_count() const {
  // @@protoc_insertion_point(field_get:upr.Layer.byte_count)
  return byte_count_;
}
inline void Layer::set_byte_count(::google::protobuf::int64 value) {
  
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Layer.byte_count)
}

// string handle_path = 3;
inline void Layer::clear_handle_path() {
  handle_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Layer::handle_path() const {
  // @@protoc_insertion_point(field_get:upr.Layer.handle_path)
  return handle_path_.GetNoArena();
}
inline void Layer::set_handle_path(const ::std::string& value) {
  
  handle_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:upr.Layer.handle_path)
}
#if LANG_CXX11
inline void Layer::set_handle_path(::std::string&& value) {
  
  handle_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:upr.Layer.handle_path)
}
#endif
inline void Layer::set_handle_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  handle_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:upr.Layer.handle_path)
}
inline void Layer::set_handle_path(const char* value, size_t size) {
  
  handle_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:upr.Layer.handle_path)
}
inline ::std::string* Layer::mutable_handle_path() {
  
  // @@protoc_insertion_point(field_mutable:upr.Layer.handle_path)
  return handle_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Layer::release_handle_path() {
  // @@protoc_insertion_point(field_release:upr.Layer.handle_path)
  
  return handle_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Layer::set_allocated_handle_path(::std::string* handle_path) {
  if (handle_path != NULL) {
    
  } else {
    
  }
  handle_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handle_path);
  // @@protoc_insertion_point(field_set_allocated:upr.Layer.handle_path)
}

// int64 raw_ptr = 4;
inline void Layer::clear_raw_ptr() {
  raw_ptr_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Layer::raw_ptr() const {
  // @@protoc_insertion_point(field_get:upr.Layer.raw_ptr)
  return raw_ptr_;
}
inline void Layer::set_raw_ptr(::google::protobuf::int64 value) {
  
  raw_ptr_ = value;
  // @@protoc_insertion_point(field_set:upr.Layer.raw_ptr)
}

// int64 ref_count = 5;
inline void Layer::clear_ref_count() {
  ref_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Layer::ref_count() const {
  // @@protoc_insertion_point(field_get:upr.Layer.ref_count)
  return ref_count_;
}
inline void Layer::set_ref_count(::google::protobuf::int64 value) {
  
  ref_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Layer.ref_count)
}

// -------------------------------------------------------------------

// Model

// string name = 1;
inline void Model::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::name() const {
  // @@protoc_insertion_point(field_get:upr.Model.name)
  return name_.GetNoArena();
}
inline void Model::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:upr.Model.name)
}
#if LANG_CXX11
inline void Model::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:upr.Model.name)
}
#endif
inline void Model::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:upr.Model.name)
}
inline void Model::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:upr.Model.name)
}
inline ::std::string* Model::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:upr.Model.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_name() {
  // @@protoc_insertion_point(field_release:upr.Model.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:upr.Model.name)
}

// string file_path = 2;
inline void Model::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::file_path() const {
  // @@protoc_insertion_point(field_get:upr.Model.file_path)
  return file_path_.GetNoArena();
}
inline void Model::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:upr.Model.file_path)
}
#if LANG_CXX11
inline void Model::set_file_path(::std::string&& value) {
  
  file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:upr.Model.file_path)
}
#endif
inline void Model::set_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:upr.Model.file_path)
}
inline void Model::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:upr.Model.file_path)
}
inline ::std::string* Model::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:upr.Model.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_file_path() {
  // @@protoc_insertion_point(field_release:upr.Model.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:upr.Model.file_path)
}

// int64 ref_count = 3;
inline void Model::clear_ref_count() {
  ref_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Model::ref_count() const {
  // @@protoc_insertion_point(field_get:upr.Model.ref_count)
  return ref_count_;
}
inline void Model::set_ref_count(::google::protobuf::int64 value) {
  
  ref_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Model.ref_count)
}

// int64 byte_count = 4;
inline void Model::clear_byte_count() {
  byte_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Model::byte_count() const {
  // @@protoc_insertion_point(field_get:upr.Model.byte_count)
  return byte_count_;
}
inline void Model::set_byte_count(::google::protobuf::int64 value) {
  
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:upr.Model.byte_count)
}

// repeated .upr.Layer layers = 5;
inline int Model::layers_size() const {
  return layers_.size();
}
inline void Model::clear_layers() {
  layers_.Clear();
}
inline const ::upr::Layer& Model::layers(int index) const {
  // @@protoc_insertion_point(field_get:upr.Model.layers)
  return layers_.Get(index);
}
inline ::upr::Layer* Model::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:upr.Model.layers)
  return layers_.Mutable(index);
}
inline ::upr::Layer* Model::add_layers() {
  // @@protoc_insertion_point(field_add:upr.Model.layers)
  return layers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::upr::Layer >*
Model::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:upr.Model.layers)
  return &layers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::upr::Layer >&
Model::layers() const {
  // @@protoc_insertion_point(field_list:upr.Model.layers)
  return layers_;
}

// -------------------------------------------------------------------

// ModelRequest

// string model_name = 1;
inline void ModelRequest::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelRequest::model_name() const {
  // @@protoc_insertion_point(field_get:upr.ModelRequest.model_name)
  return model_name_.GetNoArena();
}
inline void ModelRequest::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:upr.ModelRequest.model_name)
}
#if LANG_CXX11
inline void ModelRequest::set_model_name(::std::string&& value) {
  
  model_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:upr.ModelRequest.model_name)
}
#endif
inline void ModelRequest::set_model_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:upr.ModelRequest.model_name)
}
inline void ModelRequest::set_model_name(const char* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:upr.ModelRequest.model_name)
}
inline ::std::string* ModelRequest::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:upr.ModelRequest.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelRequest::release_model_name() {
  // @@protoc_insertion_point(field_release:upr.ModelRequest.model_name)
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelRequest::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:upr.ModelRequest.model_name)
}

// string file_path = 2;
inline void ModelRequest::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelRequest::file_path() const {
  // @@protoc_insertion_point(field_get:upr.ModelRequest.file_path)
  return file_path_.GetNoArena();
}
inline void ModelRequest::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:upr.ModelRequest.file_path)
}
#if LANG_CXX11
inline void ModelRequest::set_file_path(::std::string&& value) {
  
  file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:upr.ModelRequest.file_path)
}
#endif
inline void ModelRequest::set_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:upr.ModelRequest.file_path)
}
inline void ModelRequest::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:upr.ModelRequest.file_path)
}
inline ::std::string* ModelRequest::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:upr.ModelRequest.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelRequest::release_file_path() {
  // @@protoc_insertion_point(field_release:upr.ModelRequest.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelRequest::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:upr.ModelRequest.file_path)
}

// bool no_cache = 3;
inline void ModelRequest::clear_no_cache() {
  no_cache_ = false;
}
inline bool ModelRequest::no_cache() const {
  // @@protoc_insertion_point(field_get:upr.ModelRequest.no_cache)
  return no_cache_;
}
inline void ModelRequest::set_no_cache(bool value) {
  
  no_cache_ = value;
  // @@protoc_insertion_point(field_set:upr.ModelRequest.no_cache)
}

// -------------------------------------------------------------------

// Void

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace upr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_upr_2eproto__INCLUDED
